// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaranSoft.MyGarage.Repository.EntityFramework;

#nullable disable

namespace TaranSoft.MyGarage.Repository.EntityFramework.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Manufacturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("ManufacturerCountryId")
                        .HasColumnType("int");

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("YearCreation")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerCountryId");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DriverExperience")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.UserGarage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("UserGarages");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<long>("GarageId")
                        .HasColumnType("bigint");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GarageId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Vehicle");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Car", b =>
                {
                    b.HasBaseType("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Vehicle");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Engine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<int?>("HorsePower")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<int>("Transmission")
                        .HasColumnType("int");

                    b.Property<string>("Trim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserGarageId")
                        .HasColumnType("bigint");

                    b.HasIndex("UserGarageId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Motorcycle", b =>
                {
                    b.HasBaseType("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Vehicle");

                    b.Property<string>("Engine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<bool>("HasSideCar")
                        .HasColumnType("bit");

                    b.Property<int?>("HorsePower")
                        .HasColumnType("int");

                    b.Property<string>("Transmission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserGarageId")
                        .HasColumnType("bigint");

                    b.HasIndex("UserGarageId");

                    b.ToTable("Motorcycles");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Trailer", b =>
                {
                    b.HasBaseType("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Vehicle");

                    b.Property<bool>("HasBrakes")
                        .HasColumnType("bit");

                    b.Property<float?>("LengthMeters")
                        .HasColumnType("real");

                    b.Property<float?>("LoadCapacityKg")
                        .HasColumnType("real");

                    b.Property<int?>("NumberOfAxles")
                        .HasColumnType("int");

                    b.Property<string>("TrailerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserGarageId")
                        .HasColumnType("bigint");

                    b.HasIndex("UserGarageId");

                    b.ToTable("Trailers");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Manufacturer", b =>
                {
                    b.HasOne("TaranSoft.MyGarage.Data.Models.EF.Country", "ManufacturerCountry")
                        .WithMany()
                        .HasForeignKey("ManufacturerCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManufacturerCountry");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.UserGarage", b =>
                {
                    b.HasOne("TaranSoft.MyGarage.Data.Models.EF.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Vehicle", b =>
                {
                    b.HasOne("TaranSoft.MyGarage.Data.Models.EF.UserGarage", "Garage")
                        .WithMany("Vehicles")
                        .HasForeignKey("GarageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TaranSoft.MyGarage.Data.Models.EF.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garage");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Car", b =>
                {
                    b.HasOne("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Car", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaranSoft.MyGarage.Data.Models.EF.UserGarage", null)
                        .WithMany("Cars")
                        .HasForeignKey("UserGarageId");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Motorcycle", b =>
                {
                    b.HasOne("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Motorcycle", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaranSoft.MyGarage.Data.Models.EF.UserGarage", null)
                        .WithMany("Motorcycles")
                        .HasForeignKey("UserGarageId");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Trailer", b =>
                {
                    b.HasOne("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Vehicle", null)
                        .WithOne()
                        .HasForeignKey("TaranSoft.MyGarage.Data.Models.EF.Vehicles.Trailer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaranSoft.MyGarage.Data.Models.EF.UserGarage", null)
                        .WithMany("Trailers")
                        .HasForeignKey("UserGarageId");
                });

            modelBuilder.Entity("TaranSoft.MyGarage.Data.Models.EF.UserGarage", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Motorcycles");

                    b.Navigation("Trailers");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
